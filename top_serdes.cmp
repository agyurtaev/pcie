-- Copyright (C) 1991-2011 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.


-- Generated by Quartus II Version 10.1 (Build Build 197 01/19/2011)
-- Created on Sun Nov 03 19:18:06 2013

COMPONENT top_serdes
	GENERIC ( starting_channel_number : INTEGER := 0 );
	PORT
	(
		cal_blk_clk		:	 IN STD_LOGIC;
		fixedclk		:	 IN STD_LOGIC;
		gxb_powerdown		:	 IN STD_LOGIC_VECTOR(0 DOWNTO 0);
		pipe8b10binvpolarity		:	 IN STD_LOGIC_VECTOR(0 DOWNTO 0);
		pll_inclk		:	 IN STD_LOGIC;
		pll_powerdown		:	 IN STD_LOGIC_VECTOR(0 DOWNTO 0);
		powerdn		:	 IN STD_LOGIC_VECTOR(1 DOWNTO 0);
		rateswitch		:	 IN STD_LOGIC_VECTOR(0 DOWNTO 0);
		reconfig_clk		:	 IN STD_LOGIC;
		reconfig_togxb		:	 IN STD_LOGIC_VECTOR(3 DOWNTO 0);
		rx_analogreset		:	 IN STD_LOGIC_VECTOR(0 DOWNTO 0);
		rx_cruclk		:	 IN STD_LOGIC_VECTOR(0 DOWNTO 0);
		rx_datain		:	 IN STD_LOGIC_VECTOR(0 DOWNTO 0);
		rx_digitalreset		:	 IN STD_LOGIC_VECTOR(0 DOWNTO 0);
		rx_elecidleinfersel		:	 IN STD_LOGIC_VECTOR(2 DOWNTO 0);
		tx_ctrlenable		:	 IN STD_LOGIC_VECTOR(0 DOWNTO 0);
		tx_datain		:	 IN STD_LOGIC_VECTOR(7 DOWNTO 0);
		tx_detectrxloop		:	 IN STD_LOGIC_VECTOR(0 DOWNTO 0);
		tx_digitalreset		:	 IN STD_LOGIC_VECTOR(0 DOWNTO 0);
		tx_forcedispcompliance		:	 IN STD_LOGIC_VECTOR(0 DOWNTO 0);
		tx_forceelecidle		:	 IN STD_LOGIC_VECTOR(0 DOWNTO 0);
		tx_pipedeemph		:	 IN STD_LOGIC_VECTOR(0 DOWNTO 0);
		tx_pipemargin		:	 IN STD_LOGIC_VECTOR(2 DOWNTO 0);
		hip_tx_clkout		:	 OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
		pipedatavalid		:	 OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
		pipeelecidle		:	 OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
		pipephydonestatus		:	 OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
		pipestatus		:	 OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
		pll_locked		:	 OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
		rateswitchbaseclock		:	 OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
		reconfig_fromgxb		:	 OUT STD_LOGIC_VECTOR(16 DOWNTO 0);
		rx_ctrldetect		:	 OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
		rx_dataout		:	 OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
		rx_freqlocked		:	 OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
		rx_patterndetect		:	 OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
		rx_pll_locked		:	 OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
		rx_signaldetect		:	 OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
		rx_syncstatus		:	 OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
		tx_clkout		:	 OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
		tx_dataout		:	 OUT STD_LOGIC_VECTOR(0 DOWNTO 0)
	);
END COMPONENT;