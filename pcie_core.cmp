-- Copyright (C) 1991-2011 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.


-- Generated by Quartus II Version 10.1 (Build Build 197 01/19/2011)
-- Created on Sun Nov 17 18:23:35 2013

COMPONENT pcie_core
	PORT
	(
		app_int_sts		:	 IN STD_LOGIC;
		app_msi_num		:	 IN STD_LOGIC_VECTOR(4 DOWNTO 0);
		app_msi_req		:	 IN STD_LOGIC;
		app_msi_tc		:	 IN STD_LOGIC_VECTOR(2 DOWNTO 0);
		busy_altgxb_reconfig		:	 IN STD_LOGIC;
		cal_blk_clk		:	 IN STD_LOGIC;
		cpl_err		:	 IN STD_LOGIC_VECTOR(6 DOWNTO 0);
		cpl_pending		:	 IN STD_LOGIC;
		crst		:	 IN STD_LOGIC;
		fixedclk_serdes		:	 IN STD_LOGIC;
		gxb_powerdown		:	 IN STD_LOGIC;
		hpg_ctrler		:	 IN STD_LOGIC_VECTOR(4 DOWNTO 0);
		lmi_addr		:	 IN STD_LOGIC_VECTOR(11 DOWNTO 0);
		lmi_din		:	 IN STD_LOGIC_VECTOR(31 DOWNTO 0);
		lmi_rden		:	 IN STD_LOGIC;
		lmi_wren		:	 IN STD_LOGIC;
		npor		:	 IN STD_LOGIC;
		pclk_in		:	 IN STD_LOGIC;
		pex_msi_num		:	 IN STD_LOGIC_VECTOR(4 DOWNTO 0);
		phystatus_ext		:	 IN STD_LOGIC;
		pipe_mode		:	 IN STD_LOGIC;
		pld_clk		:	 IN STD_LOGIC;
		pll_powerdown		:	 IN STD_LOGIC;
		pm_auxpwr		:	 IN STD_LOGIC;
		pm_data		:	 IN STD_LOGIC_VECTOR(9 DOWNTO 0);
		pm_event		:	 IN STD_LOGIC;
		pme_to_cr		:	 IN STD_LOGIC;
		reconfig_clk		:	 IN STD_LOGIC;
		reconfig_togxb		:	 IN STD_LOGIC_VECTOR(3 DOWNTO 0);
		refclk		:	 IN STD_LOGIC;
		rx_in0		:	 IN STD_LOGIC;
		rx_st_mask0		:	 IN STD_LOGIC;
		rx_st_ready0		:	 IN STD_LOGIC;
		rxdata0_ext		:	 IN STD_LOGIC_VECTOR(7 DOWNTO 0);
		rxdatak0_ext		:	 IN STD_LOGIC;
		rxelecidle0_ext		:	 IN STD_LOGIC;
		rxstatus0_ext		:	 IN STD_LOGIC_VECTOR(2 DOWNTO 0);
		rxvalid0_ext		:	 IN STD_LOGIC;
		srst		:	 IN STD_LOGIC;
		test_in		:	 IN STD_LOGIC_VECTOR(39 DOWNTO 0);
		tx_st_data0		:	 IN STD_LOGIC_VECTOR(63 DOWNTO 0);
		tx_st_eop0		:	 IN STD_LOGIC;
		tx_st_err0		:	 IN STD_LOGIC;
		tx_st_sop0		:	 IN STD_LOGIC;
		tx_st_valid0		:	 IN STD_LOGIC;
		app_clk		:	 OUT STD_LOGIC;
		app_int_ack		:	 OUT STD_LOGIC;
		app_msi_ack		:	 OUT STD_LOGIC;
		clk250_out		:	 OUT STD_LOGIC;
		clk500_out		:	 OUT STD_LOGIC;
		core_clk_out		:	 OUT STD_LOGIC;
		derr_cor_ext_rcv0		:	 OUT STD_LOGIC;
		derr_cor_ext_rpl		:	 OUT STD_LOGIC;
		derr_rpl		:	 OUT STD_LOGIC;
		dlup_exit		:	 OUT STD_LOGIC;
		hotrst_exit		:	 OUT STD_LOGIC;
		ko_cpl_spc_vc0		:	 OUT STD_LOGIC_VECTOR(19 DOWNTO 0);
		l2_exit		:	 OUT STD_LOGIC;
		lane_act		:	 OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
		lmi_ack		:	 OUT STD_LOGIC;
		lmi_dout		:	 OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
		ltssm		:	 OUT STD_LOGIC_VECTOR(4 DOWNTO 0);
		pme_to_sr		:	 OUT STD_LOGIC;
		powerdown_ext		:	 OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
		r2c_err0		:	 OUT STD_LOGIC;
		rate_ext		:	 OUT STD_LOGIC;
		rc_pll_locked		:	 OUT STD_LOGIC;
		rc_rx_digitalreset		:	 OUT STD_LOGIC;
		reconfig_fromgxb		:	 OUT STD_LOGIC_VECTOR(4 DOWNTO 0);
		reset_status		:	 OUT STD_LOGIC;
		rx_fifo_empty0		:	 OUT STD_LOGIC;
		rx_fifo_full0		:	 OUT STD_LOGIC;
		rx_st_bardec0		:	 OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
		rx_st_be0		:	 OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
		rx_st_data0		:	 OUT STD_LOGIC_VECTOR(63 DOWNTO 0);
		rx_st_eop0		:	 OUT STD_LOGIC;
		rx_st_err0		:	 OUT STD_LOGIC;
		rx_st_sop0		:	 OUT STD_LOGIC;
		rx_st_valid0		:	 OUT STD_LOGIC;
		rxpolarity0_ext		:	 OUT STD_LOGIC;
		suc_spd_neg		:	 OUT STD_LOGIC;
		tl_cfg_add		:	 OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
		tl_cfg_ctl		:	 OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
		tl_cfg_ctl_wr		:	 OUT STD_LOGIC;
		tl_cfg_sts		:	 OUT STD_LOGIC_VECTOR(52 DOWNTO 0);
		tl_cfg_sts_wr		:	 OUT STD_LOGIC;
		tx_cred0		:	 OUT STD_LOGIC_VECTOR(35 DOWNTO 0);
		tx_fifo_empty0		:	 OUT STD_LOGIC;
		tx_fifo_full0		:	 OUT STD_LOGIC;
		tx_fifo_rdptr0		:	 OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
		tx_fifo_wrptr0		:	 OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
		tx_out0		:	 OUT STD_LOGIC;
		tx_st_ready0		:	 OUT STD_LOGIC;
		txcompl0_ext		:	 OUT STD_LOGIC;
		txdata0_ext		:	 OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
		txdatak0_ext		:	 OUT STD_LOGIC;
		txdetectrx_ext		:	 OUT STD_LOGIC;
		txelecidle0_ext		:	 OUT STD_LOGIC
	);
END COMPONENT;